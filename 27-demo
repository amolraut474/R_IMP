// Sidebar.js
import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import './Sidebar.css';
function Sidebar() {
  const [isOpen, setIsOpen] = useState(false);

  const handleToggle = () => {
    setIsOpen(!isOpen);
  };

  return (
    <div className='sidebar-part'>
      <div className={`sidebar ${isOpen ? 'open' : ''}`}>
        <h2 className='sidebar-menu'>MENU</h2>
        <ul>
          <li><Link to="/" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-house-door"></i></span>Home</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>
            <li><Link to="/About" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-person-circle"></i></span>About</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>

            <li><Link to="/Portfolio" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-briefcase"></i></span>Portfolio</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>

            <li><Link to="/Contact" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-globe"></i></span>Contact</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>

            <li><Link to="/Pages" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-file-earmark"></i></span>Pages</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>

            <li><Link to="/Journal" onClick={() => setIsOpen(false)}>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-postcard"></i></span>Journal</div>
            <h3 className='pluse-icon'>+</h3></div></Link></li>

            <div> <h2 className='sidebar-menu'>MENU</h2>
            <div className='nav-icon-box'><div><span className='side-bar-left-icon'><i class="bi bi-postcard"></i></span>Example@gmail.com</div>
          </div>
            
            </div>
        </ul>
      </div>
     
      <div className="toggle-button" onClick={handleToggle}>&#9776;</div>
    </div>
  );
}

export default Sidebar;



/* styles.css */

/* Main layout */

  
.sidebar {
  width: 320px;
  color: #fff;
  background-color: #35353a;
  position: fixed;
  height: 100vh;
  
}
  
  .content {
    flex: 1;
    padding: 20px;
  }
  
  /* Sidebar links */
  .sidebar ul {
    list-style-type: none;
    padding: 0;
  }
  
  .sidebar ul li {
    border-top: 1px solid rgba(255,255,255,0.05);
    background: rgba(255,255,255,0.02);
    padding: 20px 10px;
  }
  
  .sidebar ul li a {
    color: #fff;
    text-decoration: none;
    font-weight: 700;
    font-size: 14px;
    text-transform: uppercase;
  }

  .sidebar ul li:hover{
    background-color:    #35353a ;
    border-left: 5px solid #F7B90F;

  }

  .pluse-icon{
    color: #f7b90f;
  }
  
  /* Toggle button */
  .toggle-button {
    display: none; /* Hide toggle button by default */
  }
  .sidebar-menu{
    font-size: 14px;
    margin-top: 70px;
    margin-bottom: 20px;
    margin-left: 20px;
    color: #999;
  }
  .nav-icon-box{
display:flex;
justify-content: space-between;
  }
  .side-bar-left-icon{
margin-right: 20px;
font-size: 16px;
color: #f7b90f;
  }
  /* Media query for mobile view */
  @media (max-width: 768px) {
    .sidebar {
      display: none; /* Hide sidebar by default on mobile */
    }
  
    .toggle-button {
      display: block;
      position: fixed;
      top: 6px;
      right: 125px;
      z-index: 1500;
      cursor: pointer;
      color: #fff;
      padding: 10px;
      font-size: 25px;
    }
  
    .sidebar.open {
      display: block; /* Show sidebar when open class is applied */
      position: fixed;
      top: 0;
      left: 0;
      bottom: 0;
      width: 200px;
      background-color: #35353a;
      color: #fff;
      z-index: 1000;
      padding: 20px;
    }
  }
import React, { useState } from 'react';
import './NewsletterForm.css'; // Import your CSS file for styling

const NewsletterForm = () => {
  const [email, setEmail] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    // Here you can handle the submission logic, such as sending the email to your backend
    console.log('Submitting email:', email);
    // Clear the input field after submission
    setEmail('');
  };

  const handleChange = (e) => {
    setEmail(e.target.value);
  };

  return (
    <div className="form-container">
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <input
            type="email"
            placeholder="Enter your email"
            value={email}
            onChange={handleChange}
            required
          />
        </div>
        <button type="submit">Subscribe</button>
        {errorMessage && <p className="error-message">{errorMessage}</p>}
      </form>
    </div>
  );
};

export default NewsletterForm;


/* NewsletterForm.css */

.form-container {
  max-width: 400px;
  margin: 0 auto;
}

.form-group {
  margin-bottom: 20px;
}

.form-group input[type="email"] {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
}

.form-group button {
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
}

.form-group button:hover {
  background-color: #0056b3;
}

/* Optional: Add styles for form validation/error messages */
.error-message {
  color: red;
  font-size: 14px;
}
import React, { useState } from 'react';
import './NewsletterForm.css'; // Make sure to import your CSS file for styling

const NewsletterForm = () => {
  const [email, setEmail] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!validateEmail(email)) {
      setErrorMessage('Please enter a valid email address.');
      return;
    }
    // Here you can handle the submission logic, such as sending the email to your backend
    console.log('Submitting email:', email);
    // Clear the input field after submission
    setEmail('');
    setErrorMessage('');
  };

  const handleChange = (e) => {
    setEmail(e.target.value);
    setErrorMessage('');
  };

  // Function to validate email address
  const validateEmail = (email) => {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(String(email).toLowerCase());
  };

  return (
    <div className="form-container">
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <input
            type="email"
            placeholder="Enter your email"
            value={email}
            onChange={handleChange}
            required
          />
        </div>
        <button type="submit">Subscribe</button>
        {errorMessage && <p className="error-message">{errorMessage}</p>}
      </form>
    </div>
  );
};

export default NewsletterForm;

/* NewsletterForm.css */

.form-container {
  max-width: 400px;
  margin: 0 auto;
}

.form-group {
  margin-bottom: 20px;
}

.form-group input[type="email"] {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
}

.form-group button {
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
}

.form-group button:hover {
  background-color: #0056b3;
}

.error-message {
  color: red;
  font-size: 14px;
}

